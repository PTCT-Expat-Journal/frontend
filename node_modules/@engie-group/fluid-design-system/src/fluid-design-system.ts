import Alert, { AlertWC } from './components/alert';
import Checkbox, { CheckboxWC } from './components/checkbox';
import Collapse, { CollapseWC } from './components/collapse';
import Dropdown, { DropdownWC } from './components/dropdown';
import Fab, { FabWC } from './components/fab';
import Form, { FormWC } from './components/form';
import Header, { HeaderWC } from './components/header';
import Modal, { ModalWC } from './components/modal';
import Navbar, { NavbarWC } from './components/navbar';
import Radio, { RadioWC } from './components/radio';
import Select, { SelectWC } from './components/select';
import Sidebar, { SidebarWC } from './components/sidebar';
import Slider, { SliderWC } from './components/slider';
import Tag, { TagWC } from './components/tag';
import Tooltip, { TooltipWC } from './components/tooltip';

/**
 * Main class of Fluid Design System library
 */
export default class NJ {
  // List of components that will be initialized automatically
  private static readonly AUTOINIT_COMPONENTS = [
    Alert,
    Checkbox,
    Collapse,
    Dropdown,
    Fab,
    Form,
    Header,
    Modal,
    Navbar,
    Radio,
    Select,
    Sidebar,
    Slider,
    Tag
  ];

  // Makes components API available
  static readonly Alert = Alert;
  static readonly Checkbox = Checkbox;
  static readonly Collapse = Collapse;
  static readonly Dropdown = Dropdown;
  static readonly Fab = Fab;
  static readonly Form = Form;
  static readonly Header = Header;
  static readonly Modal = Modal;
  static readonly Navbar = Navbar;
  static readonly Radio = Radio;
  static readonly Select = Select;
  static readonly Sidebar = Sidebar;
  static readonly Slider = Slider;
  static readonly Tag = Tag;
  static readonly Tooltip = Tooltip;

  /**
   * Initialize the components listed in the AUTOINIT_COMPONENTS variable
   */
  static AutoInit(): void {
    try {
      NJ.AUTOINIT_COMPONENTS.forEach(component => component.init());
    } catch (error) {
      console.error('Error while loading components: ', error);
    }
  }
}

export class NJWC {
  // List of components that will be initialized automatically
  private static readonly AUTOINIT_COMPONENTS = [
    AlertWC,
    CheckboxWC,
    CollapseWC,
    DropdownWC,
    FabWC,
    FormWC,
    HeaderWC,
    ModalWC,
    NavbarWC,
    RadioWC,
    SelectWC,
    SidebarWC,
    SliderWC,
    TagWC,
    TooltipWC
  ];

  static readonly AlertWC = AlertWC;
  static readonly CheckboxWC = CheckboxWC;
  static readonly CollapseWC = CollapseWC;
  static readonly DropdownWC = DropdownWC;
  static readonly FabWC = FabWC;
  static readonly FormWC = FormWC;
  static readonly HeaderWC = HeaderWC;
  static readonly ModalWC = ModalWC;
  static readonly NavbarWC = NavbarWC;
  static readonly RadioWC = RadioWC;
  static readonly SelectWC = SelectWC;
  static readonly SidebarWC = SidebarWC;
  static readonly SliderWC = SliderWC;
  static readonly TagWC = TagWC;
  static readonly TooltipWC = TooltipWC;

  static AutoInit(): void {
    try {
      NJWC.AUTOINIT_COMPONENTS.forEach(component => component.init());
    } catch (error) {
      console.error('Error while loading web components: ', error);
    }
  }
}

declare global {
  interface Window {
    NJWC: NJWC;
    NJ: NJ;
  }
}

if (typeof window !== 'undefined') {
  window.NJWC = NJWC;
  window.NJ = NJ;
}
