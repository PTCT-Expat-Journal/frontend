.#{$prefix}-tag {
  $root: &;
  --tag-text-color: var(--gray-600);

  [data-theme="dark"] &,
  &[data-theme="dark"] {
    --tag-text-color: var(--gray-100);
  }

  display: inline-flex;
  align-items: center;
  height: 22px;
  padding: 0 map-get($spacers, 2);
  overflow: hidden;
  color: var(--tag-text-color);
  font-weight: $font-weight-normal;
  font-size: $font-size-sm;
  line-height: $font-size-sm;
  white-space: nowrap;
  text-align: center;
  text-transform: lowercase;
  border-radius: 10rem;
  transition-property: all;
  @include material-animation-linear-out-slow-in(.3s);

  // Empty tags collapse automatically
  &:empty {
    display: none;
  }

  &:not(:last-child) {
    margin-right: calc(#{map-get($spacers, 1)} - 4px); // inline-flex space of 4px
  }

  &__icon.material-icons {
    margin-right: -(map-get($spacers, 2));
    margin-left: map-get($spacers, 1);
    padding: 1px 4px 1px 2px;
    color: var(--tag-text-color);
    background-color: var(--text-on-background);
    transition-property: background-color;
    @include font-size("deca");
    @include material-animation-linear-out-slow-in(.3s);
  }

  &.disabled {
    color:var(--text-on-disabled);
    background-color: var(--disabled-background);
    border-color: transparent;
    cursor: default;

    #{$root}__icon.material-icons {
      color:var(--text-on-disabled);
      background-color: transparent;
    }

    &:hover {
      color:var(--text-on-disabled);
    }
  }

  @each $color, $value in $colors {
    &--filled-#{$color} {
      @include tag-filled-variant($color);
    }
  }

  // Colors
  @each $color, $value in $colors {
    &--#{$color} {
      @include tag-variant($color);
    }
  }
}
