// Container that the modal scrolls within
.#{$prefix}-modal {
  --modal-close-color: var(--gray-900);

  [data-theme="dark"] &,
  &[data-theme="dark"] {
    --modal-close-color: var(--theme-primary);
  }

  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--zindex-modal);
  display: none;
  width: 100%;
  height: 100%;
  overflow: hidden;
  // Prevent Chrome on Windows from adding a focus outline. For details, see
  // https://github.com/twbs/bootstrap/pull/10951.
  outline: 0;
  // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
  // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
  // See also https://github.com/twbs/bootstrap/issues/17695

  // Shell div to position the modal with bottom padding
  &__dialog {
    position: relative;
    width: auto;
    max-width: 560px;
    margin: .5rem;
    // allow clicks to pass through for custom click handling to close modal
    pointer-events: none;

    // Scale up the modal
    @include media-breakpoint-up(sm) {
      // Automatically set modal's width for larger viewports
      margin: 1.75rem auto;
    }

    &.#{$prefix}-modal--sm {
      max-width: 440px;
    }

    // When fading in the modal, animate it to slide down
    .#{$prefix}-modal.fade & {
      @include transition(transform .3s ease-out);
      transform: translate(0, -50px);
    }

    .#{$prefix}-modal.show & {
      transform: none;
    }
  }

  // Actual modal
  &__content {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
    // counteract the pointer-events: none; in the .modal-dialog
    color: null;
    background-color: var(--components-background-color);
    background-clip: padding-box;
    // Remove focus outline from opened modal
    outline: 0;
    box-shadow: $shadow-24dp;
    pointer-events: auto;
  }

  // Modal background
  &__backdrop {
    position: fixed;
    top: 0;
    left: 0;
    z-index: var(--zindex-modal-backdrop);
    width: 100vw;
    height: 100vh;
    background-color: var(--modal-backdrop-color);

    // Fade for backdrop
    &.fade {
      opacity: 0;
    }

    &.show {
      opacity: .5;
    }
  }

  // Modal header
  // Top section of the modal w/ title and dismiss
  &__header {
    display: flex;
    flex-direction: column-reverse;
    align-items: flex-start; // so the close btn always stays on the upper right corner
    justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
    padding: map-get($spacers, 5) map-get($spacers, 5) map-get($spacers, 3);

    .#{$prefix}-close {
      margin: map-get($spacers, 2) map-get($spacers, 2) 0 0;
      padding: map-get($spacers, 2) map-get($spacers, 2);
    }
  }

  // Title text within header
  &__title {
    margin-bottom: 0;
    line-height: $line-height-base;
  }

  &__close {
    padding: map_get($spacers, 1) map_get($spacers, 2);
    @include close();

    & .close-icon {
      color: var(--modal-close-color);
    }

    &-icon {
      display: block;
      color: $white;
      @include font-size("deca");
    }
  }

  // Modal body
  // Where all modal content resides (sibling of .modal-header and .modal-footer)
  &__body {
    position: relative;
    // Enable `flex-grow: 1` so that the body take up as much space as possible
    // when should there be a fixed height on `.modal-dialog`.
    flex: 1 1 auto;
    padding: 0 map-get($spacers, 5);
  }

  // Footer (for actions)
  &__footer {
    display: flex;
    align-items: center; // vertically center
    justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
    padding: map-get($spacers, 5);

    // Easily place margin between footer elements
    > :not(:first-child) {
      margin-left: .25rem;
    }

    > :not(:last-child) {
      margin-right: .25rem;
    }
  }
}
