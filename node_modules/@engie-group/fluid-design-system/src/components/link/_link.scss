.#{$prefix}-link {
  position: relative;
  padding-bottom: 3px;
  color: $link-color;

  &:not(.stretched-link) {
    &::before {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 1px;
      background-color: $link-color;
      opacity: .2;
      content: "";
    }

    &::after {
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0%; // stylelint-disable-line
      height: 1px;
      transition-property: all;
      content: "";
      @include material-animation-fast-out-slow-in(.3s);
    }
  }

  &:hover {
    color: $link-color;
    text-decoration: none;

    &:not(.stretched-link)::after {
      width: 100%;
      background-color: $link-color;
    }
  }

  &-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding-bottom: 1px;

    i {
      margin-right: map_get($spacers, 1);
      color: inherit;
      font-size: $link-icon-size;

      &:hover {
        color: inherit;
      }
    }

    span + i {
      margin-right: map_get($spacers, 0);
      margin-left: map_get($spacers, 1);
    }

    &:not(.stretched-link)::before {
      width: calc(100% - #{$link-icon-size} - .5rem); // 18px icon + spacer
    }

    &:not(.stretched-link):hover::after {
      width: calc(100% - #{$link-icon-size} - .5rem); // 18px icon + spacer
    }

    &--before:not(.stretched-link) {
      &::before {
        left: calc(#{$link-icon-size} + 8px);
        width: calc(100% - #{$link-icon-size} - .5rem); // 18px icon + spacer
      }

      &::after {
        left: calc(#{$link-icon-size} + 8px);
      }

      &:hover::after {
        width: calc(100% - #{$link-icon-size} - .5rem); // 18px icon + spacer
      }
    }
  }

  @each $color in map-keys($theme-colors) {
    &--#{$color}:not(.stretched-link) {
      @include link-variant(css-var(theme, $color));
    }
  }
}
