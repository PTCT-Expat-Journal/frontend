/**
 * --------------------------------------------------------------------------
 * NJ : abstract-component.ts
 * --------------------------------------------------------------------------
 */
export default class AbstractComponent {
    constructor(Component, element, options = {}) {
        // Display error if el is valid HTML Element
        if (element && !(element instanceof Element)) {
            console.error(Error(`${element} is not an HTML Element`));
        }
        // If exists, destroy and reinitialize in child
        const ins = Component.getInstance(element);
        if (ins) {
            ins.dispose();
        }
        this.options = options;
        this.element = element;
    }
    static init(Component, options = {}, selector) {
        const instances = [];
        document.querySelectorAll(selector).forEach(element => {
            instances.push(new Component(element, options));
        });
        return instances;
    }
}
//# sourceMappingURL=abstract-component.js.map