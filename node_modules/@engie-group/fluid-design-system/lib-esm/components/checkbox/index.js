/**
 * --------------------------------------------------------------------------
 * NJ : Checkbox.ts
 * --------------------------------------------------------------------------
 */
import AbstractFormBaseSelection from '../../globals/ts/abstract-form-base-selection';
import { Core } from '../../globals/ts/enum';
import Data from '../../globals/ts/data';
import Manipulator from '../../globals/ts/manipulator';
import WebComponentFactory from '../../globals/ts/web-component-factory';
export default class Checkbox extends AbstractFormBaseSelection {
    constructor(element, options = {}, properties = {}) {
        super(Checkbox, element, Manipulator.extend(true, Checkbox.DEFAULT_OPTIONS, options), properties);
        Data.setData(element, Checkbox.DATA_KEY, this);
    }
    dispose() {
        Data.removeData(this.element, Checkbox.DATA_KEY);
        this.element = null;
    }
    static init(options = {}) {
        return super.init(this, options, Checkbox.SELECTOR.default);
    }
    static getInstance(element) {
        return Data.getData(element, Checkbox.DATA_KEY);
    }
    static matches(element) {
        return element.getAttribute('type') === 'checkbox';
    }
}
Checkbox.NAME = `${Core.KEY_PREFIX}-checkbox`;
Checkbox.DATA_KEY = `${Core.KEY_PREFIX}.checkbox`;
Checkbox.SELECTOR = {
    default: `.${Checkbox.NAME} > label > input[type=checkbox]`,
    formGroup: AbstractFormBaseSelection.SELECTOR.formGroup,
    label: AbstractFormBaseSelection.SELECTOR.label
};
Checkbox.DEFAULT_OPTIONS = {
    template: `<span class="${Checkbox.NAME}__decorator"><span class="${Checkbox.NAME}__check"></span></span>`,
    njFormGroup: {
        required: false
    }
};
export class CheckboxWC extends WebComponentFactory {
    constructor() {
        super(Checkbox);
    }
    static init() {
        WebComponentFactory.init(CheckboxWC);
    }
}
CheckboxWC.TAG_NAME = Checkbox.NAME;
//# sourceMappingURL=index.js.map