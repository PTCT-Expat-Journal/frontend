/**
 * --------------------------------------------------------------------------
 * NJ: password-input.ts
 * --------------------------------------------------------------------------
 */
import AbstractComponent from '../../globals/ts/abstract-component';
import { Core } from '../../globals/ts/enum';
import Data from '../../globals/ts/data';
import EventHandler from '../../globals/ts/event-handler';
import Manipulator from '../../globals/ts/manipulator';
import WebComponentFactory from '../../globals/ts/web-component-factory';
export default class PasswordInput extends AbstractComponent {
    constructor(element, options = {}) {
        super(PasswordInput, element, Manipulator.extend(true, PasswordInput.DEFAULT_OPTIONS, options));
        this.setListeners();
        Data.setData(element, PasswordInput.DATA_KEY, this);
    }
    static init(options = {}) {
        return super.init(this, options, PasswordInput.SELECTOR.default);
    }
    static getInstance(element) {
        return Data.getData(element, PasswordInput.DATA_KEY);
    }
    dispose() {
        Data.removeData(this.element, PasswordInput.DATA_KEY);
        this.element = null;
    }
    setListeners() {
        const input = this.element.getElementsByClassName(PasswordInput.INPUT_CLASS)[0];
        const revealButton = this.element.getElementsByClassName(PasswordInput.REVEAL_BUTTON_CLASS)[0];
        EventHandler.on(revealButton, 'click', () => {
            this.element.classList.add('is-visible');
            input.type = 'text';
        });
        const hideButton = this.element.getElementsByClassName(PasswordInput.HIDE_BUTTON_CLASS)[0];
        EventHandler.on(hideButton, 'click', () => {
            this.element.classList.remove('is-visible');
            input.type = 'password';
        });
    }
}
PasswordInput.NAME = `${Core.KEY_PREFIX}-form-input-password`;
PasswordInput.DATA_KEY = `${Core.KEY_PREFIX}.password-input`;
PasswordInput.SELECTOR = {
    default: `.${PasswordInput.NAME}`
};
PasswordInput.INPUT_CLASS = `${Core.KEY_PREFIX}-form-control`;
PasswordInput.REVEAL_BUTTON_CLASS = `${Core.KEY_PREFIX}-form-control__password-off`;
PasswordInput.HIDE_BUTTON_CLASS = `${Core.KEY_PREFIX}-form-control__password-on`;
PasswordInput.DEFAULT_OPTIONS = {
    selector: PasswordInput.SELECTOR
};
export class PasswordInputWC extends WebComponentFactory {
    constructor() {
        super(PasswordInput);
    }
    static init() {
        WebComponentFactory.init(PasswordInputWC);
    }
}
PasswordInputWC.TAG_NAME = PasswordInput.NAME;
//# sourceMappingURL=password-input.js.map